import 'package:flutter/material.dart';
import 'package:adobe_xd/pinned.dart';
import 'package:flutter_svg/flutter_svg.dart';

class HomeScreen4 extends StatelessWidget {
  HomeScreen4({
    required Key key,
  }) : super(key: key);
  @override
  Widget build(BuildContext context) {
    return Scaffold(
      backgroundColor: const Color(0xffffffff),
      body: Stack(
        children: <Widget>[
          Container(
            decoration: BoxDecoration(
              color: const Color(0xffffffff),
              borderRadius: BorderRadius.circular(30.0),
            ),
            margin: EdgeInsets.fromLTRB(0.0, 86.0, 2.0, 55.0),
          ),
          Pinned.fromPins(
            Pin(size: 181.3, end: -20.1),
            Pin(size: 106.6, end: 76.7),
            child: Transform.rotate(
              angle: -0.9948,
              child: Stack(
                children: <Widget>[
                  Stack(
                    children: <Widget>[
                      Align(
                        alignment: Alignment(0.319, 1.0),
                        child: SizedBox(
                          width: 78.0,
                          height: 72.0,
                          child: SvgPicture.string(
                            _svg_jyqg,
                            allowDrawingOutsideViewBox: true,
                          ),
                        ),
                      ),
                      Padding(
                        padding: EdgeInsets.fromLTRB(-108.1, 0.0, -12.8, 29.5),
                        child: SizedBox.expand(
                            child: SvgPicture.string(
                          _svg_erdryq,
                          allowDrawingOutsideViewBox: true,
                          fit: BoxFit.fill,
                        )),
                      ),
                      Container(
                        color: const Color(0xff3ec3de),
                      ),
                    ],
                  ),
                ],
              ),
            ),
          ),
          Pinned.fromPins(
            Pin(start: 0.0, end: 0.0),
            Pin(size: 61.0, end: -6.0),
            child: Container(
              decoration: BoxDecoration(
                color: const Color(0xff05c3de),
                borderRadius: BorderRadius.circular(10.0),
              ),
            ),
          ),
          Pinned.fromPins(
            Pin(size: 114.0, middle: 0.5),
            Pin(size: 25.0, end: 14.0),
            child: Text(
              'Chat with us',
              style: TextStyle(
                fontFamily: 'Poppins',
                fontSize: 18,
                color: const Color(0xffffffff),
                fontWeight: FontWeight.w600,
                height: 1.3333333333333333,
              ),
              textHeightBehavior:
                  TextHeightBehavior(applyHeightToFirstAscent: false),
              softWrap: false,
            ),
          ),
          Pinned.fromPins(
            Pin(start: 25.0, end: 26.0),
            Pin(size: 170.0, start: 126.0),
            child: Container(
              decoration: BoxDecoration(
                image: DecorationImage(
                  image: const AssetImage(''),
                  fit: BoxFit.cover,
                  colorFilter: new ColorFilter.mode(
                      Colors.black.withOpacity(1.0), BlendMode.dstIn),
                ),
                borderRadius: BorderRadius.circular(20.0),
                boxShadow: [
                  BoxShadow(
                    color: const Color(0x29000000),
                    offset: Offset(5, 5),
                    blurRadius: 30,
                  ),
                ],
              ),
            ),
          ),
          Pinned.fromPins(
            Pin(size: 116.0, start: 48.0),
            Pin(size: 13.0, middle: 0.3105),
            child: Container(
              decoration: BoxDecoration(
                image: DecorationImage(
                  image: const AssetImage(''),
                  fit: BoxFit.fill,
                ),
              ),
            ),
          ),
          Pinned.fromPins(
            Pin(size: 151.0, start: 48.0),
            Pin(size: 65.0, middle: 0.2054),
            child: Text(
              'Explore the\nWorld',
              style: TextStyle(
                fontFamily: 'Poppins',
                fontSize: 27,
                color: const Color(0xffffffff),
                fontWeight: FontWeight.w600,
                height: 1.037037037037037,
                shadows: [
                  Shadow(
                    color: const Color(0x29000000),
                    offset: Offset(0, 3),
                    blurRadius: 20,
                  )
                ],
              ),
              textHeightBehavior:
                  TextHeightBehavior(applyHeightToFirstAscent: false),
              softWrap: false,
            ),
          ),
          Pinned.fromPins(
            Pin(size: 30.0, start: 48.0),
            Pin(size: 21.0, middle: 0.2819),
            child: Text(
              'with',
              style: TextStyle(
                fontFamily: 'Poppins',
                fontSize: 15,
                color: const Color(0xffffffff),
                fontWeight: FontWeight.w300,
                height: 1.8666666666666667,
                shadows: [
                  Shadow(
                    color: const Color(0x29000000),
                    offset: Offset(0, 3),
                    blurRadius: 20,
                  )
                ],
              ),
              textHeightBehavior:
                  TextHeightBehavior(applyHeightToFirstAscent: false),
              softWrap: false,
            ),
          ),
          Pinned.fromPins(
            Pin(size: 103.0, start: 39.0),
            Pin(size: 25.0, middle: 0.7902),
            child: Text(
              'Need Help?',
              style: TextStyle(
                fontFamily: 'Poppins',
                fontSize: 18,
                color: const Color(0xff000000),
                fontWeight: FontWeight.w600,
                height: 1.3333333333333333,
              ),
              textHeightBehavior:
                  TextHeightBehavior(applyHeightToFirstAscent: false),
              softWrap: false,
            ),
          ),
          Pinned.fromPins(
            Pin(size: 115.0, start: 39.0),
            Pin(size: 39.0, end: 89.9),
            child: Container(
              decoration: BoxDecoration(
                color: const Color(0xff05c3de),
                borderRadius: BorderRadius.circular(10.0),
                boxShadow: [
                  BoxShadow(
                    color: const Color(0x29000000),
                    offset: Offset(5, 5),
                    blurRadius: 15,
                  ),
                ],
              ),
            ),
          ),
          Pinned.fromPins(
            Pin(size: 148.0, start: 39.0),
            Pin(size: 19.0, middle: 0.8147),
            child: Text(
              'We are available 24x7!',
              style: TextStyle(
                fontFamily: 'Poppins',
                fontSize: 13,
                color: const Color(0xff000000),
                fontWeight: FontWeight.w500,
                height: 1.8461538461538463,
              ),
              textHeightBehavior:
                  TextHeightBehavior(applyHeightToFirstAscent: false),
              softWrap: false,
            ),
          ),
          Pinned.fromPins(
            Pin(size: 62.0, middle: 0.2378),
            Pin(size: 25.0, end: 96.9),
            child: Text(
              'Call us',
              style: TextStyle(
                fontFamily: 'Poppins',
                fontSize: 18,
                color: const Color(0xffffffff),
                fontWeight: FontWeight.w600,
                height: 1.3333333333333333,
              ),
              textHeightBehavior:
                  TextHeightBehavior(applyHeightToFirstAscent: false),
              softWrap: false,
            ),
          ),
          Pinned.fromPins(
            Pin(size: 19.0, start: 53.0),
            Pin(size: 19.0, end: 98.9),
            child: Container(
              decoration: BoxDecoration(
                image: DecorationImage(
                  image: const AssetImage(''),
                  fit: BoxFit.fill,
                ),
              ),
            ),
          ),
          Pinned.fromPins(
            Pin(size: 41.0, end: 41.0),
            Pin(size: 41.0, start: 42.0),
            child: Container(
              decoration: BoxDecoration(
                image: DecorationImage(
                  image: const AssetImage(''),
                  fit: BoxFit.fill,
                ),
              ),
            ),
          ),
          Pinned.fromPins(
            Pin(size: 56.0, end: 34.0),
            Pin(size: 17.0, start: 75.0),
            child: Text(
              'Abhishek',
              style: TextStyle(
                fontFamily: 'Poppins',
                fontSize: 12,
                color: const Color(0xff00c0da),
                fontWeight: FontWeight.w500,
                height: 1.3333333333333333,
              ),
              textHeightBehavior:
                  TextHeightBehavior(applyHeightToFirstAscent: false),
              softWrap: false,
            ),
          ),
          Align(
            alignment: Alignment(-0.055, -0.351),
            child: Container(
              width: 9.0,
              height: 9.0,
              decoration: BoxDecoration(
                color: const Color(0xffffffff),
                borderRadius:
                    BorderRadius.all(Radius.elliptical(9999.0, 9999.0)),
              ),
            ),
          ),
          Align(
            alignment: Alignment(0.003, -0.351),
            child: Container(
              width: 9.0,
              height: 9.0,
              decoration: BoxDecoration(
                borderRadius:
                    BorderRadius.all(Radius.elliptical(9999.0, 9999.0)),
                border: Border.all(width: 1.0, color: const Color(0xffffffff)),
              ),
            ),
          ),
          Align(
            alignment: Alignment(0.06, -0.351),
            child: Container(
              width: 9.0,
              height: 9.0,
              decoration: BoxDecoration(
                borderRadius:
                    BorderRadius.all(Radius.elliptical(9999.0, 9999.0)),
                border: Border.all(width: 1.0, color: const Color(0xffffffff)),
              ),
            ),
          ),
          Pinned.fromPins(
            Pin(start: 25.0, end: 24.0),
            Pin(size: 261.0, middle: 0.5557),
            child: Container(
              decoration: BoxDecoration(
                color: const Color(0xffffffff),
                borderRadius: BorderRadius.circular(20.0),
                boxShadow: [
                  BoxShadow(
                    color: const Color(0x29000000),
                    offset: Offset(5, 5),
                    blurRadius: 30,
                  ),
                ],
              ),
            ),
          ),
          Pinned.fromPins(
            Pin(start: 46.6, end: 47.4),
            Pin(size: 1.0, middle: 0.5877),
            child: SvgPicture.string(
              _svg_xosk6,
              allowDrawingOutsideViewBox: true,
              fit: BoxFit.fill,
            ),
          ),
          Pinned.fromPins(
            Pin(size: 79.0, start: 47.5),
            Pin(size: 21.0, middle: 0.4095),
            child: Text.rich(
              TextSpan(
                style: TextStyle(
                  fontFamily: 'Poppins',
                  fontSize: 15,
                  color: const Color(0xff000000),
                  height: 1.6,
                ),
                children: [
                  TextSpan(
                    text: 'My ',
                    style: TextStyle(
                      fontWeight: FontWeight.w300,
                    ),
                  ),
                  TextSpan(
                    text: 'Quotes',
                    style: TextStyle(
                      fontWeight: FontWeight.w600,
                    ),
                  ),
                ],
              ),
              textHeightBehavior:
                  TextHeightBehavior(applyHeightToFirstAscent: false),
              softWrap: false,
            ),
          ),
          Pinned.fromPins(
            Pin(size: 103.0, start: 47.1),
            Pin(size: 21.0, middle: 0.5143),
            child: Text.rich(
              TextSpan(
                style: TextStyle(
                  fontFamily: 'Poppins',
                  fontSize: 15,
                  color: const Color(0xff000000),
                  height: 1.6,
                ),
                children: [
                  TextSpan(
                    text: 'Track ',
                    style: TextStyle(
                      fontWeight: FontWeight.w300,
                    ),
                  ),
                  TextSpan(
                    text: 'My Visa',
                    style: TextStyle(
                      fontWeight: FontWeight.w600,
                    ),
                  ),
                ],
              ),
              textHeightBehavior:
                  TextHeightBehavior(applyHeightToFirstAscent: false),
              softWrap: false,
            ),
          ),
          Pinned.fromPins(
            Pin(size: 133.0, start: 47.1),
            Pin(size: 21.0, middle: 0.6192),
            child: Text.rich(
              TextSpan(
                style: TextStyle(
                  fontFamily: 'Poppins',
                  fontSize: 15,
                  color: const Color(0xff000000),
                  height: 1.6,
                ),
                children: [
                  TextSpan(
                    text: 'View ',
                    style: TextStyle(
                      fontWeight: FontWeight.w300,
                    ),
                  ),
                  TextSpan(
                    text: 'My Itinerary ',
                    style: TextStyle(
                      fontWeight: FontWeight.w600,
                    ),
                  ),
                ],
              ),
              textHeightBehavior:
                  TextHeightBehavior(applyHeightToFirstAscent: false),
              softWrap: false,
            ),
          ),
          Pinned.fromPins(
            Pin(size: 168.0, start: 47.5),
            Pin(size: 32.0, middle: 0.447),
            child: Text(
              'Lorem ipsum dolor sit amet,\nconsectetur adipiscing elit,',
              style: TextStyle(
                fontFamily: 'Poppins',
                fontSize: 12,
                color: const Color(0xff9d9d9d),
                fontWeight: FontWeight.w500,
                height: 1.25,
              ),
              textHeightBehavior:
                  TextHeightBehavior(applyHeightToFirstAscent: false),
              softWrap: false,
            ),
          ),
          Pinned.fromPins(
            Pin(size: 168.0, start: 47.1),
            Pin(size: 32.0, middle: 0.5533),
            child: Text(
              'Lorem ipsum dolor sit amet,\nconsectetur adipiscing elit,',
              style: TextStyle(
                fontFamily: 'Poppins',
                fontSize: 12,
                color: const Color(0xff9d9d9d),
                fontWeight: FontWeight.w500,
                height: 1.25,
              ),
              textHeightBehavior:
                  TextHeightBehavior(applyHeightToFirstAscent: false),
              softWrap: false,
            ),
          ),
          Pinned.fromPins(
            Pin(size: 168.0, start: 47.1),
            Pin(size: 32.0, middle: 0.6596),
            child: Text(
              'Lorem ipsum dolor sit amet,\nconsectetur adipiscing elit,',
              style: TextStyle(
                fontFamily: 'Poppins',
                fontSize: 12,
                color: const Color(0xff9d9d9d),
                fontWeight: FontWeight.w500,
                height: 1.25,
              ),
              textHeightBehavior:
                  TextHeightBehavior(applyHeightToFirstAscent: false),
              softWrap: false,
            ),
          ),
          Pinned.fromPins(
            Pin(size: 17.7, end: 50.0),
            Pin(size: 17.7, middle: 0.4377),
            child: Transform.rotate(
              angle: 2.3562,
              child: Container(
                decoration: BoxDecoration(
                  image: DecorationImage(
                    image: const AssetImage(''),
                    fit: BoxFit.fill,
                  ),
                ),
              ),
            ),
          ),
          Pinned.fromPins(
            Pin(size: 17.7, end: 50.3),
            Pin(size: 17.7, middle: 0.5421),
            child: Transform.rotate(
              angle: 2.3562,
              child: Container(
                decoration: BoxDecoration(
                  image: DecorationImage(
                    image: const AssetImage(''),
                    fit: BoxFit.fill,
                  ),
                ),
              ),
            ),
          ),
          Pinned.fromPins(
            Pin(size: 17.7, end: 50.3),
            Pin(size: 17.7, middle: 0.6466),
            child: Transform.rotate(
              angle: 2.3562,
              child: Container(
                decoration: BoxDecoration(
                  image: DecorationImage(
                    image: const AssetImage(''),
                    fit: BoxFit.fill,
                  ),
                ),
              ),
            ),
          ),
          Pinned.fromPins(
            Pin(start: 47.0, end: 47.0),
            Pin(size: 1.0, middle: 0.4853),
            child: SvgPicture.string(
              _svg_jqzsq,
              allowDrawingOutsideViewBox: true,
              fit: BoxFit.fill,
            ),
          ),
          Pinned.fromPins(
            Pin(size: 25.0, start: 34.0),
            Pin(size: 25.0, start: 56.0),
            child: Container(
              decoration: BoxDecoration(
                image: DecorationImage(
                  image: const AssetImage(''),
                  fit: BoxFit.fill,
                ),
              ),
            ),
          ),
        ],
      ),
    );
  }
}

const String _svg_jyqg =
    '<svg viewBox="67.8 34.6 78.5 72.0" ><path transform="translate(-896.51, -178.96)" d="M 1042.7568359375 253.6983642578125 C 1042.585571289062 255.3607482910156 1036.576049804688 257.4939575195312 1029.242431640625 256.8975219726562 C 1029.242431640625 256.8975219726562 1023.834777832031 256.4576721191406 1015.629821777344 255.7903747558594 L 1011.364196777344 260.8190307617188 L 1011.819885253906 260.8561401367188 C 1012.034240722656 260.8736267089844 1012.192810058594 261.0426635742188 1012.173034667969 261.2347412109375 L 1011.752746582031 265.3149108886719 C 1011.732971191406 265.50537109375 1011.542663574219 265.646240234375 1011.328308105469 265.6287231445312 L 1007.548217773438 265.3212280273438 L 1003.336181640625 270.2893371582031 L 1004.266479492188 270.3649597167969 C 1004.480590820312 270.38232421875 1004.638916015625 270.551513671875 1004.619323730469 270.741943359375 L 1004.199401855469 274.8221435546875 C 1004.17919921875 275.0142517089844 1003.989379882812 275.1532592773438 1003.774597167969 275.1359252929688 L 999.5204467773438 274.7898864746094 L 990.8380126953125 285.0319519042969 C 990.5487060546875 285.3713073730469 990.0823974609375 285.5564270019531 989.6028442382812 285.517333984375 L 986.3822021484375 285.2554321289062 C 986.0535278320312 285.2287292480469 985.8526611328125 284.91943359375 985.9940185546875 284.6526794433594 L 994.2278442382812 269.0016784667969 L 993.7536010742188 268.9630432128906 C 993.6049194335938 268.9510498046875 993.4701538085938 268.9074401855469 993.3717041015625 268.8489074707031 C 993.2732543945312 268.7905883789062 993.215087890625 268.7142944335938 993.223388671875 268.6367797851562 C 993.2392578125 268.4818420410156 993.5244750976562 268.3797607421875 993.8115234375 268.4031066894531 L 994.5127563476562 268.4601440429688 L 997.4100341796875 262.953857421875 L 997.6681518554688 260.4473876953125 L 996.952392578125 260.3890686035156 C 996.8050537109375 260.377197265625 996.6683349609375 260.3351135253906 996.5702514648438 260.2750854492188 C 996.4718017578125 260.2166137695312 996.4137573242188 260.1402587890625 996.4219360351562 260.062744140625 C 996.4374389648438 259.9094848632812 996.72314453125 259.8057861328125 997.01025390625 259.8290710449219 L 997.7257080078125 259.8872680664062 L 998.293212890625 254.3803405761719 L 992.9032592773438 253.9421081542969 C 989.1848754882812 253.6396789550781 985.9994506835938 253.2340087890625 983.2716064453125 252.7745361328125 L 974.4737548828125 262.3269348144531 C 974.3372192382812 262.4754028320312 974.1260375976562 262.5525817871094 973.91357421875 262.5353393554688 L 971.9391479492188 262.3747253417969 C 971.5285034179688 262.3413696289062 971.2576904296875 261.9823608398438 971.3778686523438 261.6324768066406 L 973.1843872070312 256.4038391113281 L 972.7393798828125 256.3675537109375 C 972.590087890625 256.3555297851562 972.455322265625 256.3135681152344 972.3571166992188 256.2535705566406 C 972.2586669921875 256.1950988769531 972.2007446289062 256.1188049316406 972.2081909179688 256.0428466796875 C 972.2241821289062 255.8879699707031 972.5101318359375 255.7842712402344 972.796875 255.8075561523438 L 973.3745727539062 255.8545837402344 L 974.6422119140625 252.1915588378906 L 974.1625366210938 252.1524963378906 C 974.0153198242188 252.1406860351562 973.8787231445312 252.0985412597656 973.780517578125 252.0385437011719 C 973.6838989257812 251.9801940917969 973.6257934570312 251.9038391113281 973.6336059570312 251.8280334472656 C 973.6494750976562 251.6730651855469 973.9351196289062 251.5693359375 974.2202758789062 251.592529296875 L 974.8304443359375 251.6421203613281 L 975.0886840820312 250.8949890136719 C 972.1207885742188 249.9781494140625 970.3140258789062 249.0760498046875 969.2919921875 248.4541015625 L 965.6536865234375 248.1583557128906 C 964.9124755859375 248.0980529785156 964.2427978515625 247.7164001464844 964.2838134765625 247.3162536621094 C 964.3046875 247.11767578125 964.4923706054688 246.948974609375 964.7724609375 246.840087890625 C 965.0514526367188 246.7308349609375 965.4195556640625 246.679443359375 965.8028564453125 246.7105407714844 L 969.441162109375 247.0065307617188 C 970.5731811523438 246.5598449707031 972.5340576171875 245.9642028808594 975.6405639648438 245.5413818359375 L 975.5391845703125 244.764892578125 L 974.9286499023438 244.7153015136719 C 974.6437377929688 244.692138671875 974.3839721679688 244.5441284179688 974.3999633789062 244.3892211914062 C 974.4075317382812 244.3133239746094 974.4806518554688 244.24755859375 974.5872802734375 244.2058715820312 C 974.6964111328125 244.1626281738281 974.8392333984375 244.1433410644531 974.9866943359375 244.1553039550781 L 975.4658813476562 244.1942443847656 L 974.9679565429688 240.3877258300781 L 974.3902587890625 240.3407592773438 C 974.1033935546875 240.3174133300781 973.84375 240.1693115234375 973.85986328125 240.0143737792969 C 973.8677978515625 239.9368591308594 973.940185546875 239.8728637695312 974.049072265625 239.8311767578125 C 974.1576538085938 239.7879333496094 974.2991333007812 239.7684936523438 974.4481811523438 239.7806701660156 L 974.89306640625 239.8169555664062 L 974.18505859375 234.3835754394531 C 974.1384887695312 234.0202331542969 974.4779663085938 233.7091979980469 974.8889770507812 233.7426147460938 L 976.8633422851562 233.9031982421875 C 977.0755004882812 233.9205627441406 977.2674560546875 234.0321960449219 977.37109375 234.2001342773438 L 984.0715942382812 245.0130004882812 C 986.84765625 245.0011901855469 990.0632934570312 245.1162414550781 993.78173828125 245.4185180664062 L 999.171142578125 245.85693359375 L 999.738525390625 240.3500061035156 L 999.0228881835938 240.2918090820312 C 998.73583984375 240.2685241699219 998.47607421875 240.1203002929688 998.4921875 239.9654235839844 C 998.4998779296875 239.8895568847656 998.57275390625 239.8239135742188 998.681396484375 239.7822875976562 C 998.7904052734375 239.7389831542969 998.93310546875 239.7196960449219 999.0802612304688 239.7317199707031 L 999.7963256835938 239.7898864746094 L 1000.054321289062 237.283447265625 L 998.3303833007812 231.4012756347656 L 997.6293334960938 231.3444213867188 C 997.3424682617188 231.321044921875 997.0824584960938 231.174560546875 997.0985717773438 231.0196228027344 C 997.1065063476562 230.942138671875 997.1792602539062 230.8764953613281 997.2879028320312 230.8348388671875 C 997.3966064453125 230.793212890625 997.5379638671875 230.7721557617188 997.68701171875 230.7842712402344 L 998.160888671875 230.8228454589844 L 993.2618408203125 214.1037292480469 C 993.1777954101562 213.8186340332031 993.4384155273438 213.5468444824219 993.766845703125 213.5735473632812 L 996.9876098632812 213.83544921875 C 997.4669189453125 213.8745422363281 997.8878784179688 214.1301574707031 998.1029663085938 214.5121459960938 L 1004.548522949219 225.9846801757812 L 1008.802734375 226.3305053710938 C 1009.017028808594 226.3480224609375 1009.175598144531 226.515625 1009.155700683594 226.7076721191406 L 1008.735656738281 230.7876586914062 C 1008.715698242188 230.9781188964844 1008.525573730469 231.1189575195312 1008.311096191406 231.1014709472656 L 1007.381042480469 231.0259704589844 L 1010.507873535156 236.5907287597656 L 1014.288024902344 236.898193359375 C 1014.502502441406 236.9156494140625 1014.660949707031 237.084716796875 1014.640930175781 237.275146484375 L 1014.221130371094 241.3553466796875 C 1014.201232910156 241.5473937988281 1014.010803222656 241.6880493164062 1013.796569824219 241.6707458496094 L 1013.340393066406 241.6336059570312 L 1016.507873535156 247.2669677734375 C 1024.713012695312 247.9342346191406 1030.120727539062 248.3740844726562 1030.120727539062 248.3740844726562 C 1037.453857421875 248.9705505371094 1042.927734375 252.03759765625 1042.7568359375 253.6983642578125" fill="#3ec3de" stroke="none" stroke-width="1" stroke-miterlimit="10" stroke-linecap="butt" /></svg>';
const String _svg_erdryq =
    '<svg viewBox="-108.1 0.0 302.2 77.0" ><path transform="translate(-108.12, 0.0)" d="M 36.11613082885742 77.04653167724609 L 36.1086540222168 75.74993133544922 C 37.91960906982422 75.74167633056641 39.75537872314453 75.716552734375 41.56524276733398 75.67506408691406 L 41.60300064086914 76.97132873535156 C 39.78292465209961 77.01297760009766 37.9367561340332 77.03826141357422 36.11613082885742 77.04653167724609 M 29.53151893615723 77.00357055664062 C 27.71381187438965 76.97196960449219 25.86837387084961 76.92253875732422 24.04665374755859 76.85722351074219 L 24.10575485229492 75.56161499023438 C 25.91726112365723 75.62677001953125 27.75247955322266 75.67587280273438 29.56015777587891 75.70731353759766 L 29.53151893615723 77.00357055664062 Z M 48.1825065612793 76.74895477294922 L 48.10917663574219 75.45399475097656 C 49.91502380371094 75.37312316894531 51.74788284301758 75.27410125732422 53.55646514892578 75.15998840332031 L 53.65989303588867 76.45350646972656 C 51.84127044677734 76.56808471679688 49.99839019775391 76.6676025390625 48.1825065612793 76.74895477294922 M 17.47098350524902 76.54766845703125 C 15.65071868896484 76.44151306152344 13.80984306335449 76.31735992431641 11.99942970275879 76.177978515625 L 12.12529277801514 74.88626098632812 C 13.92549228668213 75.024658203125 15.75633430480957 75.14849090576172 17.56638145446777 75.25383758544922 L 17.47098350524902 76.54766845703125 Z M 60.22169876098633 75.96728515625 L 60.08252334594727 74.67668914794922 C 61.8859977722168 74.52304840087891 63.71210861206055 74.35076904296875 65.50938415527344 74.16485595703125 L 65.67829895019531 75.45268249511719 C 63.87116622924805 75.63972473144531 62.03521347045898 75.81283569335938 60.22169876098633 75.96728515625 M 5.446742534637451 75.599853515625 C 3.633592844009399 75.41914367675781 1.801109552383423 75.21913909912109 0 75.00537872314453 L 0.1933538466691971 73.72013092041016 C 1.984248161315918 73.93293762207031 3.806334972381592 74.13162994384766 5.609268188476562 74.31138610839844 L 5.446742534637451 75.599853515625 Z M 260.7644958496094 74.77555084228516 L 260.7181396484375 73.47962188720703 C 262.5298767089844 73.42840576171875 264.3663635253906 73.36567687988281 266.1769714355469 73.29339599609375 L 266.2425842285156 74.58868408203125 C 264.4258117675781 74.66129302978516 262.5826110839844 74.72416687011719 260.7644958496094 74.77555084228516 M 72.20854949951172 74.70375823974609 L 72.00407409667969 73.41996765136719 C 73.80043029785156 73.19388580322266 75.61558532714844 72.94849395751953 77.39919281005859 72.69048309326172 L 77.63358306884766 73.97020721435547 C 75.83995819091797 74.22968292236328 74.01476287841797 74.47637176513672 72.20854949951172 74.70375823974609 M 272.8113098144531 74.28074645996094 L 272.7230529785156 72.98675537109375 C 274.5324096679688 72.88934326171875 276.3661499023438 72.77994537353516 278.1736145019531 72.66147613525391 L 278.2808532714844 73.95465087890625 C 276.467041015625 74.07345581054688 274.6268615722656 74.18318176269531 272.8113098144531 74.28074645996094 M 284.8372192382812 73.47978210449219 L 284.7071533203125 72.18822479248047 C 286.5121154785156 72.04478454589844 288.3416748046875 71.88887786865234 290.1451416015625 71.72435760498047 L 290.2940368652344 73.01414489746094 C 288.4843139648438 73.17912292480469 286.6483764648438 73.33586883544922 284.8372192382812 73.47978210449219 M 84.1195068359375 72.95920562744141 L 83.84937286376953 71.68513488769531 C 85.62731170654297 71.38773345947266 87.42822265625 71.06925964355469 89.20198059082031 70.73863220214844 L 89.50167846679688 72.00767517089844 C 87.7178955078125 72.34008026123047 85.90712738037109 72.66017913818359 84.1195068359375 72.95920562744141 M 296.832275390625 72.37184143066406 L 296.6604919433594 71.08417510986328 C 298.4192810058594 70.89891815185547 300.2055969238281 70.70053863525391 301.97021484375 70.49421691894531 L 302.1604614257812 71.77979278564453 C 300.3898315429688 71.98659515380859 298.5970764160156 72.18595123291016 296.832275390625 72.37184143066406 M 95.92868804931641 70.73506164550781 L 95.59342193603516 69.47316741943359 C 97.36098480224609 69.10250091552734 99.14329528808594 68.71109771728516 100.8911361694336 68.31012725830078 L 101.2559432983398 69.56553649902344 C 99.49825286865234 69.96878814697266 97.70590209960938 70.36245727539062 95.92868804931641 70.73506164550781 M 107.6112747192383 68.03151702880859 L 107.2108840942383 66.78453063964844 C 108.9556198120117 66.34223175048828 110.715690612793 65.8780517578125 112.4420166015625 65.40496826171875 L 112.8721389770508 66.64385223388672 C 111.135986328125 67.11970520019531 109.3658752441406 67.58662414550781 107.6112747192383 68.03151702880859 M 170.4173583984375 67.30299377441406 C 168.6386871337891 66.80284881591797 166.8866424560547 66.26492309570312 165.2100982666016 65.70432281494141 L 165.7239532470703 64.49088287353516 C 167.3764038085938 65.043212890625 169.1034545898438 65.57352447509766 170.8578643798828 66.06687927246094 L 170.4173583984375 67.30299377441406 Z M 119.1397399902344 64.84840393066406 L 118.6740341186523 63.61957550048828 C 120.390869140625 63.10596084594727 122.1243057250977 62.56900787353516 123.8265609741211 62.02314758300781 L 124.3216018676758 63.242919921875 C 122.6098861694336 63.79168319702148 120.8662261962891 64.33203887939453 119.1397399902344 64.84840393066406 M 159.1030578613281 63.43951416015625 C 157.4146575927734 62.74679946899414 155.7556610107422 62.00613021850586 154.1712341308594 61.23774719238281 L 154.87060546875 60.09967041015625 C 156.4262084960938 60.85427474975586 158.0560302734375 61.58183288574219 159.71484375 62.26221466064453 L 159.1030578613281 63.43951416015625 Z M 130.4868469238281 61.18522262573242 L 129.9549560546875 59.9777946472168 C 131.7584381103516 59.35040283203125 133.40869140625 58.75138092041016 134.9998626708984 58.1463623046875 L 135.5740814208984 59.33840560913086 C 133.9686889648438 59.94893264770508 132.3045654296875 60.55282592773438 130.4868469238281 61.18522262573242 M 148.5048980712891 58.16887664794922 C 147.1422882080078 57.34571838378906 145.8046875 56.47068023681641 144.5214385986328 55.56275939941406 C 143.5687103271484 56.01282501220703 142.5851440429688 56.45903015136719 141.5806427001953 56.89742660522461 L 140.9374542236328 55.73341369628906 C 142.6165313720703 55.00100326538086 144.2343597412109 54.24607086181641 145.7463226318359 53.48967361450195 L 146.4622802734375 54.61948776245117 C 146.2822265625 54.70960998535156 146.1005554199219 54.79970550537109 145.9178161621094 54.88966751098633 C 147.0224609375 55.65545654296875 148.1645050048828 56.39548492431641 149.3253631591797 57.09677505493164 L 148.5048980712891 58.16887664794922 Z M 152.0983428955078 51.52032470703125 L 151.2756958007812 50.44918441772461 C 152.8022766113281 49.52374649047852 154.2599029541016 48.55697250366211 155.6082763671875 47.57513427734375 L 156.5330810546875 48.57788848876953 C 155.1518859863281 49.58370590209961 153.6597900390625 50.57365417480469 152.0983428955078 51.52032470703125 M 139.1318054199219 51.28532409667969 C 137.8177185058594 50.11385345458984 136.5651092529297 48.88857650756836 135.4090118408203 47.64369964599609 L 136.5344390869141 46.81841659545898 C 137.6615753173828 48.03218078613281 138.8833465576172 49.22714614868164 140.1653137207031 50.36976623535156 L 139.1318054199219 51.28532409667969 Z M 161.4180145263672 44.55830764770508 L 160.3527221679688 43.67192840576172 L 160.3968811035156 43.63092803955078 C 161.6069793701172 42.49689865112305 162.7528839111328 41.27227783203125 163.7935180664062 39.99968338012695 L 164.9742584228516 40.76158142089844 C 163.8962249755859 42.08004760742188 162.7094573974609 43.34826278686523 161.4464569091797 44.5317268371582 L 161.4180145263672 44.55830764770508 Z M 131.4942932128906 42.86415100097656 C 130.4885101318359 41.45801162719727 129.577392578125 40.00988006591797 128.7860870361328 38.55998229980469 L 130.0992431640625 37.99434280395508 C 130.8661193847656 39.39984130859375 131.7498626708984 40.80437088012695 132.7259216308594 42.168701171875 L 131.4942932128906 42.86415100097656 Z M 168.4498901367188 35.69307327270508 L 167.1453094482422 35.11252975463867 C 167.9582824707031 33.67023468017578 168.6452331542969 32.18888473510742 169.1868286132812 30.71013069152832 L 170.5745849609375 31.11142158508301 C 170.0104064941406 32.651611328125 169.2955169677734 34.1932487487793 168.4498901367188 35.69307327270508 M 126.3363265991211 33.04690551757812 C 125.7865371704102 31.45355606079102 125.3637084960938 29.8320198059082 125.0799026489258 28.22700881958008 L 126.5212936401367 28.02571296691895 C 126.7947235107422 29.57027053833008 127.2018508911133 31.13184356689453 127.7315673828125 32.66684341430664 L 126.3363265991211 33.04690551757812 Z M 172.0021057128906 25.29056739807129 L 170.5514068603516 25.14939880371094 C 170.6625061035156 24.24859809875488 170.7188720703125 23.34471321105957 170.7186889648438 22.46255111694336 C 170.7186889648438 21.77941513061523 170.6849517822266 21.09335899353027 170.6185455322266 20.42334938049316 L 172.0721740722656 20.30957412719727 C 172.1424102783203 21.01734733581543 172.177978515625 21.74148750305176 172.177978515625 22.4623908996582 C 172.1781616210938 23.39155578613281 172.1190338134766 24.34308624267578 172.0021057128906 25.29056739807129 M 126.0995483398438 22.33257102966309 L 124.6408081054688 22.29464530944824 C 124.6953735351562 20.64328384399414 124.9217376708984 18.98187065124512 125.3139343261719 17.35659980773926 L 126.7407150268555 17.62855911254883 C 126.3669662475586 19.17684555053711 126.1513671875 20.7596492767334 126.0995483398438 22.33257102966309 M 169.2508544921875 14.90816211700439 L 169.2236633300781 14.84219837188721 C 168.6410522460938 13.43329906463623 167.8307952880859 12.05778121948242 166.8147583007812 10.75422763824463 L 168.0148315429688 10.01630973815918 C 169.1009063720703 11.40997505187988 169.9684295654297 12.88338184356689 170.5933685302734 14.39536476135254 L 170.6207580566406 14.46148872375488 L 169.2508544921875 14.90816211700439 Z M 128.7691040039062 12.24659633636475 L 127.4484786987305 11.69522571563721 C 128.2651214599609 10.15131568908691 129.2455596923828 8.714698791503906 130.3628082275391 7.426055431365967 L 131.5187377929688 8.217458724975586 C 130.4658966064453 9.431711196899414 129.5408935546875 10.78745269775391 128.7691040039062 12.24659633636475 M 162.5261383056641 6.587328433990479 C 161.1752166748047 5.574695110321045 159.6978912353516 4.679727554321289 158.1351928710938 3.927546501159668 L 158.8301696777344 2.787523746490479 C 160.480224609375 3.581844091415405 162.0403747558594 4.52689266204834 163.4670257568359 5.596413612365723 L 162.5261383056641 6.587328433990479 Z M 136.0718536376953 4.325273990631104 L 135.236083984375 3.262722015380859 C 136.4573059082031 2.504381656646729 137.7710113525391 1.863057851791382 139.1407165527344 1.356741786003113 C 139.5102844238281 1.219951868057251 139.8911743164062 1.09142804145813 140.2725524902344 0.9747353196144104 L 140.7481384277344 2.200332641601562 C 140.3955230712891 2.308435678482056 140.0432739257812 2.427559375762939 139.7012634277344 2.553813934326172 C 138.4282379150391 3.024474859237671 137.2071685791016 3.620417594909668 136.0718536376953 4.325273990631104 M 152.2030487060547 1.877158761024475 C 150.4478912353516 1.493531465530396 148.6838226318359 1.29855751991272 146.9600524902344 1.297585248947144 L 146.9609680175781 0.001000000163912773 C 148.8018493652344 0.001972438767552376 150.682861328125 0.2095880955457687 152.5518035888672 0.6181744933128357 L 152.2030487060547 1.877158761024475 Z" fill="#3ec3de" stroke="none" stroke-width="1" stroke-miterlimit="10" stroke-linecap="butt" /></svg>';
const String _svg_xosk6 =
    '<svg viewBox="46.6 495.4 296.0 1.0" ><path transform="translate(46.65, 495.44)" d="M 0 0 L 296 0" fill="none" fill-opacity="0.21" stroke="#707070" stroke-width="1" stroke-opacity="0.21" stroke-miterlimit="4" stroke-linecap="butt" /></svg>';
const String _svg_jqzsq =
    '<svg viewBox="47.0 409.1 296.0 1.0" ><path transform="translate(47.0, 409.15)" d="M 0 0 L 296 0" fill="none" fill-opacity="0.21" stroke="#707070" stroke-width="1" stroke-opacity="0.21" stroke-miterlimit="4" stroke-linecap="butt" /></svg>';
